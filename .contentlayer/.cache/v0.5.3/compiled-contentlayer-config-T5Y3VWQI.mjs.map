{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, defineNestedType, makeSource } from \"contentlayer2/source-files\";\r\nimport rehypePrettycode from \"rehype-pretty-code\";\r\nimport remarkGfm from \"remark-gfm\";\r\nimport rehypeSlug from \"rehype-slug\";\r\n\r\n\r\n/** ================ BLOG STUFF ================ */\r\nconst Blog = defineDocumentType(() => ({\r\n    name: \"Blog\",\r\n    filePathPattern: \"blog/*.mdx\",\r\n    contentType: \"mdx\",\r\n    fields: {\r\n        title: {\r\n            type: \"string\",\r\n            description: \"The title of the document\",\r\n            required: true,\r\n        },\r\n        description: {\r\n            type: \"string\",\r\n            description: \"The description of the document\",\r\n            required: false,\r\n        },\r\n        image: {\r\n            type: \"string\",\r\n            description: \"The image url (can be relative)\",\r\n            required: true,\r\n        },\r\n        author: {\r\n            type: \"string\",\r\n            description: \"The name of the author\",\r\n            required: true,\r\n        },\r\n        date: {\r\n            type: \"date\",\r\n            description: \"The release Date of the Post\",\r\n            required: true,\r\n        },\r\n        tags: {\r\n            type: \"json\",\r\n            description: \"The tags for the blog post\",\r\n            required: false\r\n        }\r\n    },\r\n    computedFields: {\r\n        url: {\r\n            type: \"string\",\r\n            resolve: (blog: any) => {\r\n                return \"/\" + blog._raw.flattenedPath;\r\n            },\r\n        },\r\n        slug: {\r\n            type: \"string\",\r\n            resolve: (blog: any) => {\r\n                return blog._raw.flattenedPath.split(\"/\").slice(1).join(\"/\");\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nconst Author = defineNestedType(() => ({\r\n    name: \"Author\",\r\n    fields: {\r\n        name: { type: \"string\", required: true },\r\n        title: { type: \"string\", required: true },\r\n        icon: { type: \"string\", required: true }\r\n    }\r\n}))\r\n\r\nconst BlogMeta = defineDocumentType(() => ({\r\n    name: \"BlogMeta\",\r\n    filePathPattern: \"blog/meta.json\",\r\n    contentType: \"data\",\r\n    fields: {\r\n        authors: {\r\n            type: \"list\",\r\n            of: Author,\r\n            required: true,\r\n        },\r\n    },\r\n    isSingleton: true,\r\n}));\r\n\r\nexport default makeSource({\r\n    contentDirPath: \"content\",\r\n    documentTypes: [Blog, BlogMeta],\r\n    mdx: {\r\n        rehypePlugins: [\r\n            rehypePrettycode,\r\n            rehypeSlug\r\n        ],\r\n        remarkPlugins: [\r\n            remarkGfm\r\n        ],\r\n    }\r\n});"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB,kBAAkB;AACjE,OAAO,sBAAsB;AAC7B,OAAO,eAAe;AACtB,OAAO,gBAAgB;AAIvB,IAAM,OAAO,mBAAmB,OAAO;AAAA,EACnC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,OAAO;AAAA,MACH,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,aAAa;AAAA,MACT,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,OAAO;AAAA,MACH,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,EACJ;AAAA,EACA,gBAAgB;AAAA,IACZ,KAAK;AAAA,MACD,MAAM;AAAA,MACN,SAAS,CAAC,SAAc;AACpB,eAAO,MAAM,KAAK,KAAK;AAAA,MAC3B;AAAA,IACJ;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,SAAS,CAAC,SAAc;AACpB,eAAO,KAAK,KAAK,cAAc,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG;AAAA,MAC/D;AAAA,IACJ;AAAA,EACJ;AACJ,EAAE;AAEF,IAAM,SAAS,iBAAiB,OAAO;AAAA,EACnC,MAAM;AAAA,EACN,QAAQ;AAAA,IACJ,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACvC,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EAC3C;AACJ,EAAE;AAEF,IAAM,WAAW,mBAAmB,OAAO;AAAA,EACvC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,SAAS;AAAA,MACL,MAAM;AAAA,MACN,IAAI;AAAA,MACJ,UAAU;AAAA,IACd;AAAA,EACJ;AAAA,EACA,aAAa;AACjB,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACtB,gBAAgB;AAAA,EAChB,eAAe,CAAC,MAAM,QAAQ;AAAA,EAC9B,KAAK;AAAA,IACD,eAAe;AAAA,MACX;AAAA,MACA;AAAA,IACJ;AAAA,IACA,eAAe;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AACJ,CAAC;",
  "names": []
}
